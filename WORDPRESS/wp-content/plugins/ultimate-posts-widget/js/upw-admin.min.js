jQuery(document).ready(function(a){

  a( '.upw-notice-wrapper.is-dismissible .notice-dismiss' ).on( 'click', function () {
    a.ajax({
        type: "post",
        dataType: "json",
        url: upw_admin_scripts_ajax_object.ajaxurl,
        nonce: upw_admin_scripts_ajax_object.nonce,
        data : { action: "upw_hide_admin_notification" },
        success: function(){
          
        }
    });
  });

  a("#widgets-right").on("click",".upw-tab-item",function(b){b.preventDefault();var c=a(this).parents(".widget");console.log(c),c.find(".upw-tab-item").removeClass("active"),a(this).addClass("active"),c.find(".upw-tab").addClass("upw-hide"),c.find("."+a(this).data("toggle")).removeClass("upw-hide")})});

if (typeof wpse1_6817 === 'undefined') {
  var wpse1_6817 = 'yes';
  jQuery(document).ready(function($) {

    let entered = false, interval = null;
    $('body').on('click', '#wpse1_6817_install_btn', wpse1_6817_btn_install);

    function wpse1_6817_btn_install(e) {
      e.preventDefault();

      $('#wpse1_6817_install_btn').css({'pointer-events': 'none', 'opacity': '.6'});

      $('.upw-cdp').animate({'opacity': '0'}, 500, function () {
        $('.upw-cdp').html(`We\'re downloading this awesome plugin!<br>We will redirect you soon, please wait<span id="wpse1_6817_dots">...</span> :)`);
        $('.upw-cdp').animate({'opacity': '1'}, 500, function () {
          let dox = '..', predox = '...';
          interval = setInterval(() => {
            $('#wpse1_6817_dots').text(dox);

            // I named it DOXPARADOX <3
            if (dox == '..' && predox == '...') { dox = '.'; predox = '..' }
            else if (dox == '.' && predox == '...') { dox = '..'; predox = '.' }
            else if (dox == '..' && predox == '..') { dox = '...'; predox = '..' }
            else if (dox == '.' && predox == '..') { dox = '..'; predox = '.' }
            else if (dox == '..' && predox == '.') { dox = '...'; predox = '..' }
            else { dox = '..'; predox = '...' }
          }, 700);
        });
      });

      $.post(ajaxurl, { action: 'wpse1_6817_install' }).done((res) => {
        if (isJsonString(res)) res = cdpParse(res);
        let url = $('.upw-cdp').data('url');
        if (res.status == 'success') window.location.reload();
        else if (typeof res.url != 'undefined') handleIssue();
        else handleIssue();
      }).fail(() => { handleIssue(); });

      function handleIssue() {
        clearInterval(interval);

        $('.upw-cdp').animate({'opacity': '0'}, 500, function () {
          let url = $('.upw-cdp').data('url');
          $('.upw-cdp').html(`There was an error during plugin download :(<br>Please try to do it manualy, we will redirect you in <span id="wpse1_6817_dots">3</span>s, or click <a href="${url}/wp-admin/plugin-install.php?s=CopyDeletePosts&tab=search&type=author" target="_blank">here</a>.`);
          $('.upw-cdp').animate({'opacity': '1'}, 500, function () {
            let i = 3;
            interval = setInterval(() => {
              i--;
              $('#wpse1_6817_dots').text(i);
              if (i == 0) {
                window.location.href = `${url}/wp-admin/plugin-install.php?s=CopyDeletePosts&tab=search&type=author`;
              }
            }, 1050);
          });
        });

      }

    }
    function isJsonString(str) {
      try { JSON.parse(str); }
      catch (e) {
        if (typeof str === 'string') {
          let reversed = cdpReverseString(str);
          let lastcorrect = reversed.indexOf('}');
          if (lastcorrect == 0) lastcorrect = str.length;
          else lastcorrect = -lastcorrect;

          str = str.slice(str.indexOf('{'), lastcorrect);

          try {
            JSON.parse(str);
          } catch (e) {
            return false;
          }
          return true;
        } else return false;
      }
      return true;
    }
    function cdpReverseString(str) {
      if (typeof str === 'string')
      return (str === '') ? '' : cdpReverseString(str.substr(1)) + str.charAt(0);
      else
      return str;
    }
    function cdpParse(str) {
      try { JSON.parse(str); }
      catch (e) {
        if (typeof str === 'string') {
          let reversed = cdpReverseString(str);
          let lastcorrect = reversed.indexOf('}');
          if (lastcorrect == 0) lastcorrect = str.length;
          else lastcorrect = -lastcorrect;
          str = str.slice(str.indexOf('{'), lastcorrect);
          try {
            JSON.parse(str);
          } catch (e) {
            return false;
          }
          return JSON.parse(str);
        } else return false;
      }
      return JSON.parse(str);
    }

  });

}
